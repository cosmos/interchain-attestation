syntax = "proto3";
package hub.pessimist;

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "cosmos_proto/cosmos.proto";
//import "ibc/core/client/v1/client.proto";

option go_package = "hub/x/pessimist/types";

message ClientState {
  option (gogoproto.goproto_getters) = false;

  string dependent_client_id = 1;
  sfixed64 latest_height    = 2;
}

// This is the client message
message CommitteeProposal {
  repeated Commitment commitments = 3 [(gogoproto.nullable) = false];
}

// Commitment is pretty much just a vote extension + signature and validator info
message Commitment {
  bytes validator_address = 1;
  CanonicalVoteExtension canonical_vote_extension = 2 [(gogoproto.nullable) = false];
  bytes extension_signature = 3;
  google.protobuf.Timestamp timestamp = 4 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
}

// Copied from comet just to make this work quickly
message CanonicalVoteExtension {
  bytes    extension = 1;
  sfixed64 height    = 2;
  sfixed64 round     = 3;
  string   chain_id  = 4;
}

message VoteExtension {
  repeated ValidationVote validation_votes = 1 [(gogoproto.nullable) = false];
}

message ValidationVote {
  string client_id_to_validate = 1;
  string client_id_to_update = 2;
  sfixed64 height = 3;
  google.protobuf.Timestamp timestamp = 4 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
  MerkleRoot merkle_root = 5 [(gogoproto.nullable) = false];
  bytes next_validator_hash = 6;
}

// This is just used to pass from prepareProposal to pre-blocker handler
message CommitteeProposalSpecialTx {
  CommitteeProposal committee_proposal = 1 [(gogoproto.nullable) = false];
  repeated string client_ids_to_send_to = 2 [(gogoproto.nullable) = false];
}

// copy from ibc
message MerkleRoot {
  option (gogoproto.goproto_getters) = false;

  bytes hash = 1;
}