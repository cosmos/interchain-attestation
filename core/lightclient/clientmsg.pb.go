// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: core/lightclient/v1/clientmsg.proto

package lightclient

import (
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	github_com_cosmos_gogoproto_types "github.com/cosmos/gogoproto/types"
	types "github.com/cosmos/ibc-go/v9/modules/core/02-client/types"
	_ "github.com/cosmos/interchain-attestation/core/types"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type PacketCommitmentVote struct {
	Power             uint64   `protobuf:"varint,1,opt,name=power,proto3" json:"power,omitempty"`
	PacketCommitments [][]byte `protobuf:"bytes,2,rep,name=packet_commitments,json=packetCommitments,proto3" json:"packet_commitments,omitempty"`
}

func (m *PacketCommitmentVote) Reset()         { *m = PacketCommitmentVote{} }
func (m *PacketCommitmentVote) String() string { return proto.CompactTextString(m) }
func (*PacketCommitmentVote) ProtoMessage()    {}
func (*PacketCommitmentVote) Descriptor() ([]byte, []int) {
	return fileDescriptor_8256c76801ad19ea, []int{0}
}
func (m *PacketCommitmentVote) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PacketCommitmentVote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PacketCommitmentVote.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PacketCommitmentVote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PacketCommitmentVote.Merge(m, src)
}
func (m *PacketCommitmentVote) XXX_Size() int {
	return m.Size()
}
func (m *PacketCommitmentVote) XXX_DiscardUnknown() {
	xxx_messageInfo_PacketCommitmentVote.DiscardUnknown(m)
}

var xxx_messageInfo_PacketCommitmentVote proto.InternalMessageInfo

func (m *PacketCommitmentVote) GetPower() uint64 {
	if m != nil {
		return m.Power
	}
	return 0
}

func (m *PacketCommitmentVote) GetPacketCommitments() [][]byte {
	if m != nil {
		return m.PacketCommitments
	}
	return nil
}

// AttestationTally is the clientMsg that is sent to the light client to update
type AttestationTally struct {
	TotalPower uint64                  `protobuf:"varint,1,opt,name=total_power,json=totalPower,proto3" json:"total_power,omitempty"`
	Height     types.Height            `protobuf:"bytes,2,opt,name=height,proto3" json:"height"`
	Timestamp  time.Time               `protobuf:"bytes,3,opt,name=timestamp,proto3,stdtime" json:"timestamp"`
	Votes      []*PacketCommitmentVote `protobuf:"bytes,4,rep,name=votes,proto3" json:"votes,omitempty"`
}

func (m *AttestationTally) Reset()         { *m = AttestationTally{} }
func (m *AttestationTally) String() string { return proto.CompactTextString(m) }
func (*AttestationTally) ProtoMessage()    {}
func (*AttestationTally) Descriptor() ([]byte, []int) {
	return fileDescriptor_8256c76801ad19ea, []int{1}
}
func (m *AttestationTally) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AttestationTally) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AttestationTally.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AttestationTally) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttestationTally.Merge(m, src)
}
func (m *AttestationTally) XXX_Size() int {
	return m.Size()
}
func (m *AttestationTally) XXX_DiscardUnknown() {
	xxx_messageInfo_AttestationTally.DiscardUnknown(m)
}

var xxx_messageInfo_AttestationTally proto.InternalMessageInfo

func (m *AttestationTally) GetTotalPower() uint64 {
	if m != nil {
		return m.TotalPower
	}
	return 0
}

func (m *AttestationTally) GetHeight() types.Height {
	if m != nil {
		return m.Height
	}
	return types.Height{}
}

func (m *AttestationTally) GetTimestamp() time.Time {
	if m != nil {
		return m.Timestamp
	}
	return time.Time{}
}

func (m *AttestationTally) GetVotes() []*PacketCommitmentVote {
	if m != nil {
		return m.Votes
	}
	return nil
}

func init() {
	proto.RegisterType((*PacketCommitmentVote)(nil), "core.lightclient.v1.PacketCommitmentVote")
	proto.RegisterType((*AttestationTally)(nil), "core.lightclient.v1.AttestationTally")
}

func init() {
	proto.RegisterFile("core/lightclient/v1/clientmsg.proto", fileDescriptor_8256c76801ad19ea)
}

var fileDescriptor_8256c76801ad19ea = []byte{
	// 383 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0xb1, 0x8e, 0xd3, 0x40,
	0x10, 0x86, 0xbd, 0x97, 0xdc, 0x09, 0x36, 0x14, 0x60, 0x52, 0x58, 0x29, 0x6c, 0xeb, 0x68, 0x4c,
	0x71, 0xbb, 0xba, 0xa3, 0x81, 0x0a, 0x61, 0x1a, 0xca, 0x93, 0x89, 0x28, 0xa0, 0x88, 0xec, 0xd5,
	0x62, 0xaf, 0xf0, 0x7a, 0x2c, 0xef, 0x24, 0x28, 0x6f, 0x91, 0xc7, 0x4a, 0x99, 0x92, 0x0a, 0x50,
	0xf2, 0x06, 0x3c, 0x01, 0xf2, 0x3a, 0x4e, 0xa2, 0x28, 0xdd, 0x8c, 0xe7, 0xfb, 0xff, 0xb1, 0xfe,
	0x59, 0xfa, 0x4a, 0x40, 0x23, 0x79, 0xa9, 0xf2, 0x02, 0x45, 0xa9, 0x64, 0x85, 0x7c, 0x71, 0xcf,
	0xbb, 0x4a, 0x9b, 0x9c, 0xd5, 0x0d, 0x20, 0xb8, 0x2f, 0x5b, 0x88, 0x9d, 0x40, 0x6c, 0x71, 0x3f,
	0x19, 0xe7, 0x90, 0x83, 0x9d, 0xf3, 0xb6, 0xea, 0xd0, 0x49, 0xa0, 0x32, 0xc1, 0xad, 0xe7, 0xb9,
	0x5d, 0x0f, 0xe4, 0x00, 0x79, 0x29, 0xb9, 0xed, 0xb2, 0xf9, 0x77, 0x8e, 0x4a, 0x4b, 0x83, 0xa9,
	0xae, 0x7b, 0xc0, 0xaa, 0x71, 0x59, 0x4b, 0xd3, 0x8a, 0x53, 0xc4, 0x76, 0x8c, 0x0a, 0xaa, 0x0e,
	0xb8, 0xfd, 0x46, 0xc7, 0x8f, 0xa9, 0xf8, 0x21, 0xf1, 0x23, 0x68, 0xad, 0x50, 0xcb, 0x0a, 0xbf,
	0x00, 0x4a, 0x77, 0x4c, 0xaf, 0x6b, 0xf8, 0x29, 0x1b, 0x8f, 0x84, 0x24, 0x1a, 0x26, 0x5d, 0xe3,
	0xde, 0x51, 0xb7, 0xb6, 0xf4, 0x4c, 0x1c, 0x70, 0xe3, 0x5d, 0x85, 0x83, 0xe8, 0x59, 0xf2, 0xa2,
	0x3e, 0xf3, 0x31, 0xb7, 0xff, 0x08, 0x7d, 0xfe, 0xe1, 0xb8, 0x72, 0x9a, 0x96, 0xe5, 0xd2, 0x0d,
	0xe8, 0x08, 0x01, 0xd3, 0x72, 0x76, 0xea, 0x4f, 0xed, 0xa7, 0x47, 0xbb, 0xe4, 0x2d, 0xbd, 0x29,
	0x64, 0x1b, 0x8f, 0x77, 0x15, 0x92, 0x68, 0xf4, 0x30, 0x61, 0x2a, 0x13, 0xcc, 0xa6, 0x76, 0x08,
	0x8c, 0x7d, 0xb2, 0x44, 0x3c, 0x5c, 0xff, 0x0e, 0x9c, 0x64, 0xcf, 0xbb, 0x31, 0x7d, 0x7a, 0x08,
	0xc0, 0x1b, 0xec, 0xc5, 0x5d, 0x44, 0xac, 0x8f, 0x88, 0x4d, 0x7b, 0x22, 0x7e, 0xd2, 0x8a, 0x57,
	0x7f, 0x02, 0x92, 0x1c, 0x65, 0xee, 0x7b, 0x7a, 0xbd, 0x00, 0x94, 0xc6, 0x1b, 0x86, 0x83, 0x68,
	0xf4, 0xf0, 0x9a, 0x5d, 0x38, 0x17, 0xbb, 0x14, 0x59, 0xd2, 0xe9, 0xe2, 0xcf, 0xeb, 0xad, 0x4f,
	0x36, 0x5b, 0x9f, 0xfc, 0xdd, 0xfa, 0x64, 0xb5, 0xf3, 0x9d, 0xcd, 0xce, 0x77, 0x7e, 0xed, 0x7c,
	0xe7, 0xeb, 0xbb, 0x5c, 0x61, 0x31, 0xcf, 0x98, 0x00, 0xcd, 0x05, 0x18, 0x0d, 0x86, 0xab, 0x0a,
	0x65, 0x23, 0x8a, 0x54, 0x55, 0x77, 0x27, 0xb7, 0xe1, 0xe7, 0xef, 0x28, 0xbb, 0xb1, 0xbf, 0xff,
	0xe6, 0x7f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb8, 0xd3, 0x87, 0xdd, 0x62, 0x02, 0x00, 0x00,
}

func (m *PacketCommitmentVote) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PacketCommitmentVote) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PacketCommitmentVote) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PacketCommitments) > 0 {
		for iNdEx := len(m.PacketCommitments) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.PacketCommitments[iNdEx])
			copy(dAtA[i:], m.PacketCommitments[iNdEx])
			i = encodeVarintClientmsg(dAtA, i, uint64(len(m.PacketCommitments[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Power != 0 {
		i = encodeVarintClientmsg(dAtA, i, uint64(m.Power))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *AttestationTally) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AttestationTally) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AttestationTally) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Votes) > 0 {
		for iNdEx := len(m.Votes) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Votes[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintClientmsg(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	n1, err1 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(m.Timestamp, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(m.Timestamp):])
	if err1 != nil {
		return 0, err1
	}
	i -= n1
	i = encodeVarintClientmsg(dAtA, i, uint64(n1))
	i--
	dAtA[i] = 0x1a
	{
		size, err := m.Height.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintClientmsg(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if m.TotalPower != 0 {
		i = encodeVarintClientmsg(dAtA, i, uint64(m.TotalPower))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintClientmsg(dAtA []byte, offset int, v uint64) int {
	offset -= sovClientmsg(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *PacketCommitmentVote) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Power != 0 {
		n += 1 + sovClientmsg(uint64(m.Power))
	}
	if len(m.PacketCommitments) > 0 {
		for _, b := range m.PacketCommitments {
			l = len(b)
			n += 1 + l + sovClientmsg(uint64(l))
		}
	}
	return n
}

func (m *AttestationTally) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TotalPower != 0 {
		n += 1 + sovClientmsg(uint64(m.TotalPower))
	}
	l = m.Height.Size()
	n += 1 + l + sovClientmsg(uint64(l))
	l = github_com_cosmos_gogoproto_types.SizeOfStdTime(m.Timestamp)
	n += 1 + l + sovClientmsg(uint64(l))
	if len(m.Votes) > 0 {
		for _, e := range m.Votes {
			l = e.Size()
			n += 1 + l + sovClientmsg(uint64(l))
		}
	}
	return n
}

func sovClientmsg(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozClientmsg(x uint64) (n int) {
	return sovClientmsg(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *PacketCommitmentVote) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowClientmsg
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PacketCommitmentVote: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PacketCommitmentVote: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Power", wireType)
			}
			m.Power = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClientmsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Power |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PacketCommitments", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClientmsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthClientmsg
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthClientmsg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PacketCommitments = append(m.PacketCommitments, make([]byte, postIndex-iNdEx))
			copy(m.PacketCommitments[len(m.PacketCommitments)-1], dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipClientmsg(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthClientmsg
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AttestationTally) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowClientmsg
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AttestationTally: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AttestationTally: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalPower", wireType)
			}
			m.TotalPower = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClientmsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TotalPower |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClientmsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthClientmsg
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthClientmsg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Height.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClientmsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthClientmsg
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthClientmsg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(&m.Timestamp, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Votes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClientmsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthClientmsg
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthClientmsg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Votes = append(m.Votes, &PacketCommitmentVote{})
			if err := m.Votes[len(m.Votes)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipClientmsg(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthClientmsg
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipClientmsg(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowClientmsg
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowClientmsg
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowClientmsg
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthClientmsg
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupClientmsg
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthClientmsg
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthClientmsg        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowClientmsg          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupClientmsg = fmt.Errorf("proto: unexpected end of group")
)
