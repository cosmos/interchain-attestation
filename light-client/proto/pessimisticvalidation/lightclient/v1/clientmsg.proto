syntax = "proto3";
package pessimisticvalidation.lightclient.v1;

import "gogoproto/gogo.proto";
import "ibc/core/client/v1/client.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/gjermundgaraba/pessimistic-validation/lightclient";

// PessimisticClaims is the clientMsg that is sent to the light client to update
// the consensus state All the claims need to be for the same height and have
// the same packet_commitments
message PessimisticClaims {
  repeated SignedPacketCommitmentsClaim claims = 1
      [ (gogoproto.nullable) = false ];
}

message SignedPacketCommitmentsClaim {
  bytes attestator_id = 1;
  PacketCommitmentsClaim packet_commitments_claim = 2
      [ (gogoproto.nullable) = false ];
  bytes signature = 3;
}

message PacketCommitmentsClaim {
  ibc.core.client.v1.Height height = 1 [ (gogoproto.nullable) = false ];
  google.protobuf.Timestamp timestamp = 2
      [ (gogoproto.nullable) = false, (gogoproto.stdtime) = true ];
  repeated bytes packet_commitments = 3;
}
